{"version":3,"sources":["components/Header.js","mazeGen/Square.js","mazeGen/Board.js","mazeGen/MazeGen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","to","Square","props","name","riBorder","Math","random","boBorder","borderStyle","borderRightWidth","index","borderRightColor","borderBottomWidth","borderBottomColor","id","style","onClick","toggle","newStatus","board","document","getElementById","status","Board","row","i","square","MazeGen","useState","gameBoard","setBoard","useEffect","a","Array","fill","getBoard","newBoard","App","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8118923b.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>Other projects!</h1>\r\n            <h2>\r\n                <a className ='btn' href='/task-tracker'>\r\n                    Task Tracker\r\n                </a> \r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <Link className='btn' to=\"/maze\">Maze Generator</Link>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <Link className='btn' to ='/base'>Empty</Link>\r\n            </h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const Square = (props) => {\r\n    let name = 'square';\r\n    const riBorder = Math.random();\r\n    const boBorder = Math.random();\r\n    const borderStyle = {\r\n        borderRightWidth: (riBorder<0.40) && !(props.index%13 === 12)? '5px': '1px',\r\n        borderRightColor: (riBorder<0.40) && !(props.index%13 === 12)? 'red': '',\r\n        borderBottomWidth: (boBorder<0.40) && (props.index<156)? '5px' : '',\r\n        borderBottomColor: (boBorder<0.40) && (props.index<156)? 'red' : '',\r\n    }\r\n\r\n    const status = () => {\r\n        props.toggle(props.index);\r\n        let newStatus = props.board[props.index];\r\n        \r\n        let newName = newStatus? 'square Green' : 'square';\r\n        name = newName;\r\n        document.getElementById(`square${props.index}`).className = name;\r\n    }\r\n\r\n    return (\r\n        <div id={`square${props.index}`}\r\n            style ={borderStyle}\r\n            className={'square'} \r\n            onClick={() => status()}\r\n            >\r\n        </div>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default Square\r\n","import Square from \"./Square\"\r\n\r\nconst Board = (props) => {\r\n\r\n    //size 13\r\n    const row = (i) => {\r\n        return <>\r\n            <Square\r\n                board={props.square}\r\n                status={props.square[0+i]} \r\n                index={0+i}\r\n                toggle={props.toggle}\r\n            />\r\n            <Square\r\n                status={props.square[1+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={1+i}\r\n            />\r\n            <Square\r\n                status={props.square[2+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={2+i}\r\n            />\r\n            <Square\r\n                status={props.square[3+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={3+i}\r\n            />\r\n            <Square\r\n                status={props.square[4+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={4+i}\r\n            />\r\n            <Square\r\n                status={props.square[5+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={5+i}\r\n            />\r\n            <Square\r\n                status={props.square[6+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={6+i}\r\n            />\r\n            <Square\r\n                status={props.square[7+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={7+i}\r\n            />\r\n            <Square\r\n                status={props.square[8+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={8+i}\r\n            />\r\n            <Square\r\n                status={props.square[9+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={9+i}\r\n            />\r\n            <Square\r\n                status={props.square[10+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={10+i}\r\n            />\r\n            <Square\r\n                status={props.square[11+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={11+i}\r\n            />\r\n            <Square\r\n                status={props.square[12+i]}\r\n                board={props.square}\r\n                toggle={props.toggle}\r\n                index={12+i}\r\n            />\r\n        </>\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        // repeat this 13 times:\r\n            <>\r\n                <div className='board-row' id='row'>\r\n                {row (0)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (13)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (26)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (39)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (52)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (65)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (78)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (91)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (104)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (117)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (130)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (143)}\r\n                </div>\r\n                <div className='board-row' id='row'>\r\n                {row (156)}\r\n                </div>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Board\r\n","import { Link } from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport Header from '../components/Header';\r\nimport Board from './Board';\r\n\r\nconst MazeGen = () => {\r\n\r\n    //const board = Array(169).fill(true);\r\n\r\n    const [gameBoard, setBoard] = useState ([]);\r\n\r\n    useEffect( () => {\r\n        const getBoard = async () => {\r\n            setBoard(Array(169).fill(false))\r\n        }\r\n        getBoard();\r\n    }, [] )\r\n\r\n\r\n    //generat\r\n\r\n    //switch between true/false\r\n    const toggle = (i) => {\r\n        let newBoard = gameBoard;\r\n        newBoard[i] = (!gameBoard[i]);\r\n        setBoard(newBoard);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='container'>\r\n            <Board \r\n                square={gameBoard}\r\n                toggle={toggle}\r\n            />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MazeGen\r\n","import React from 'react'\r\nimport Header from './components/Header'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport MazeGen from './mazeGen/MazeGen';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router> \r\n    <div className=\"App\">\r\n      \r\n      <Route path='/base' render ={(props) =>\r\n      (\r\n        <Header />\r\n      )}\r\n      />\r\n\r\n      <Route path='/maze' component={MazeGen} />\r\n\r\n    </div>\r\n    \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './header.css';\r\nimport './maze.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}